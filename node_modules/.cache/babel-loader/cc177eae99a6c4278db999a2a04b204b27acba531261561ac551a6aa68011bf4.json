{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\astri\\\\OneDrive - Grand Canyon University\\\\Capstone\\\\Capstone\\\\src\\\\Midi.js\";\nimport React, { useContext } from 'react';\n//import WebMidi from 'webmidi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Midi extends React.Component {\n  //const { keyInfo, pitch, modulation } = useContext(MidiDataContext);\n\n  /*constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        inputs: []\r\n      };\r\n      WebMidi.enable(() => {\r\n        this.setState({\r\n          inputs: WebMidi.inputs\r\n        });\r\n      });\r\n    }*/\n\n  componentDidMount() {\n    navigator.requestMIDIAccess().then(function (MidiAccess) {\n      console.log(\"Browser supports midi access\");\n    }, function () {\n      console.log(\"Browser does not support midi access.\");\n    });\n    /*\r\n    const input = WebMidi.getInputByName('Your MIDI Input Name');\r\n    input.addListener('noteon', 'all', e => {\r\n      console.log(`Note ${e.note.number} on`);\r\n    });*/\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Test Midi component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Midi;","map":{"version":3,"names":["React","useContext","jsxDEV","_jsxDEV","Midi","Component","componentDidMount","navigator","requestMIDIAccess","then","MidiAccess","console","log","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/astri/OneDrive - Grand Canyon University/Capstone/Capstone/src/Midi.js"],"sourcesContent":["import React, {useContext} from 'react';\r\n//import WebMidi from 'webmidi';\r\n\r\n\r\nclass Midi extends React.Component\r\n{\r\n\r\n  \r\n  //const { keyInfo, pitch, modulation } = useContext(MidiDataContext);\r\n\r\n    /*constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          inputs: []\r\n        };\r\n        WebMidi.enable(() => {\r\n          this.setState({\r\n            inputs: WebMidi.inputs\r\n          });\r\n        });\r\n      }*/\r\n\r\n      componentDidMount() {\r\n\r\n        navigator.requestMIDIAccess().then(function(MidiAccess)\r\n        {\r\n          console.log(\"Browser supports midi access\");\r\n\r\n        }, function()\r\n        {\r\n          console.log(\"Browser does not support midi access.\");\r\n        }\r\n        )\r\n        /*\r\n        const input = WebMidi.getInputByName('Your MIDI Input Name');\r\n        input.addListener('noteon', 'all', e => {\r\n          console.log(`Note ${e.note.number} on`);\r\n        });*/\r\n      }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <p>Test Midi component</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Midi;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,IAAI,SAASJ,KAAK,CAACK,SAAS,CAClC;EAGE;;EAEE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEMC,iBAAiBA,CAAA,EAAG;IAElBC,SAAS,CAACC,iBAAiB,EAAE,CAACC,IAAI,CAAC,UAASC,UAAU,EACtD;MACEC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAE7C,CAAC,EAAE,YACH;MACED,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACtD,CAAC,CACA;IACD;AACR;AACA;AACA;AACA;EACM;;EAEFC,MAAMA,CAAA,EACN;IACI,oBACIV,OAAA;MAAAW,QAAA,eACIX,OAAA;QAAAW,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxB;EAEd;AACJ;AAGA,eAAed,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}