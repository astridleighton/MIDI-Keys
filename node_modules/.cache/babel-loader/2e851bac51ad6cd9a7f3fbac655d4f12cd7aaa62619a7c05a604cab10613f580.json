{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.js';\nclass MIDIAccess {\n  constructor() {\n    this.onMIDIFailure = () => {\n      console.log(\"Midi failure.\");\n    };\n    this.getMIDIInfo = event => {\n      const note = event.data[1];\n      console.log(`Playing note: ${note}`);\n    };\n    navigator.requestMIDIAccess().then(this.onMIDISuccess.bind(this), this.onMIDIFailure.bind(this));\n  }\n  onMIDISuccess(midiAccess) {\n    console.log(\"WebMIDI is supported in browser.\");\n    var midiIns = midiAccess.inputs;\n    var midiOuts = midiAccess.outputs;\n    const inputs = midiIns.values();\n\n    // list midi inputs to console\n    if (inputs != null) {\n      for (let input of inputs) {\n        console.log(`Found MIDI input: ${input.name}`);\n        input.onMIDIMessage = this.onMIDIMessage.bind(this);\n      }\n    } else {\n      console.log(\"Please connect MIDI device.\");\n    }\n  }\n}\nexport default MIDIAccess;","map":{"version":3,"names":["React","ReactDOM","App","MIDIAccess","constructor","onMIDIFailure","console","log","getMIDIInfo","event","note","data","navigator","requestMIDIAccess","then","onMIDISuccess","bind","midiAccess","midiIns","inputs","midiOuts","outputs","values","input","name","onMIDIMessage"],"sources":["C:/Users/astri/OneDrive - Grand Canyon University/Capstone/Capstone/src/MIDIAccess.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App.js';\r\n\r\nclass MIDIAccess\r\n{\r\n\r\n    constructor()\r\n    {\r\n        navigator.requestMIDIAccess()\r\n            .then(this.onMIDISuccess.bind(this), this.onMIDIFailure.bind(this));\r\n    }\r\n\r\n    onMIDISuccess(midiAccess)\r\n    {\r\n        console.log(\"WebMIDI is supported in browser.\");\r\n        var midiIns = midiAccess.inputs;\r\n        var midiOuts = midiAccess.outputs;\r\n\r\n        const inputs = midiIns.values();\r\n\r\n        // list midi inputs to console\r\n        if (inputs != null)\r\n        {\r\n            for(let input of inputs)\r\n            {\r\n                console.log(`Found MIDI input: ${input.name}`);\r\n                input.onMIDIMessage = this.onMIDIMessage.bind(this);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Please connect MIDI device.\");\r\n        }\r\n        \r\n    }\r\n\r\n    onMIDIFailure =  () =>\r\n    {\r\n        console.log(\"Midi failure.\");\r\n    }\r\n\r\n    getMIDIInfo = (event) =>\r\n    {\r\n        const note = event.data[1];\r\n        console.log(`Playing note: ${note}`);\r\n    }\r\n}\r\n\r\n\r\nexport default MIDIAccess;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,UAAU;AAE1B,MAAMC,UAAU,CAChB;EAEIC,WAAWA,CAAA,EACX;IAAA,KA6BAC,aAAa,GAAI,MACjB;MACIC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAChC,CAAC;IAAA,KAEDC,WAAW,GAAIC,KAAK,IACpB;MACI,MAAMC,IAAI,GAAGD,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC;MAC1BL,OAAO,CAACC,GAAG,CAAE,iBAAgBG,IAAK,EAAC,CAAC;IACxC,CAAC;IArCGE,SAAS,CAACC,iBAAiB,EAAE,CACxBC,IAAI,CAAC,IAAI,CAACC,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAACX,aAAa,CAACW,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3E;EAEAD,aAAaA,CAACE,UAAU,EACxB;IACIX,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/C,IAAIW,OAAO,GAAGD,UAAU,CAACE,MAAM;IAC/B,IAAIC,QAAQ,GAAGH,UAAU,CAACI,OAAO;IAEjC,MAAMF,MAAM,GAAGD,OAAO,CAACI,MAAM,EAAE;;IAE/B;IACA,IAAIH,MAAM,IAAI,IAAI,EAClB;MACI,KAAI,IAAII,KAAK,IAAIJ,MAAM,EACvB;QACIb,OAAO,CAACC,GAAG,CAAE,qBAAoBgB,KAAK,CAACC,IAAK,EAAC,CAAC;QAC9CD,KAAK,CAACE,aAAa,GAAG,IAAI,CAACA,aAAa,CAACT,IAAI,CAAC,IAAI,CAAC;MACvD;IACJ,CAAC,MAED;MACIV,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C;EAEJ;AAYJ;AAGA,eAAeJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}