{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.js';\nclass MIDIAccess {\n  constructor() {\n    this.onMIDIFailure = () => {\n      console.log(\"Midi failure.\");\n    };\n    this.onMIDIMessage = event => {\n      let message = `MIDI message received at timestamp ${event.timeStamp}[${event.data.length} bytes]: `;\n      for (const character of event.data) {\n        message += `0x${character.toString(16)}`;\n      }\n      console.log(message);\n    };\n    navigator.requestMIDIAccess().then(this.onMIDISuccess.bind(this), this.onMIDIFailure.bind(this));\n    this.midi = null;\n  }\n  onMIDISuccess(midiAccess) {\n    console.log(\"WebMIDI is supported in browser.\");\n    this.midi = midiAccess;\n    var midiIns = midiAccess.inputs;\n    var midiOuts = midiAccess.outputs;\n    const inputs = midiIns.values();\n    const outputs = midiOuts.values();\n\n    // list midi inputs to console\n    if (inputs != null) {\n      for (let input of inputs) {\n        console.log(`Found MIDI input: ${input.name}, ID: ${input.id}`);\n        //input.onMIDIMessage = this.onMIDIMessage.bind(this);\n      }\n    } else {\n      console.log(\"Please connect MIDI device.\");\n    }\n\n    // list midi outputs to console\n    if (outputs != null) {\n      for (let output of outputs) {\n        console.log(`Found MIDI output: ${output.name}, ID: ${output.id}`);\n      }\n    }\n  }\n}\nexport default MIDIAccess;","map":{"version":3,"names":["React","ReactDOM","App","MIDIAccess","constructor","onMIDIFailure","console","log","onMIDIMessage","event","message","timeStamp","data","length","character","toString","navigator","requestMIDIAccess","then","onMIDISuccess","bind","midi","midiAccess","midiIns","inputs","midiOuts","outputs","values","input","name","id","output"],"sources":["C:/Users/astri/OneDrive - Grand Canyon University/Capstone/Capstone/src/MIDIAccess.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App.js';\r\n\r\nclass MIDIAccess\r\n{\r\n\r\n    \r\n\r\n\r\n    constructor()\r\n    {\r\n        navigator.requestMIDIAccess()\r\n            .then(this.onMIDISuccess.bind(this), this.onMIDIFailure.bind(this));\r\n        this.midi = null;\r\n    }\r\n\r\n    onMIDISuccess(midiAccess)\r\n    {\r\n        console.log(\"WebMIDI is supported in browser.\");\r\n        this.midi = midiAccess;\r\n\r\n        var midiIns = midiAccess.inputs;\r\n        var midiOuts = midiAccess.outputs;\r\n\r\n        const inputs = midiIns.values();\r\n        const outputs = midiOuts.values();\r\n\r\n        // list midi inputs to console\r\n        if (inputs != null)\r\n        {\r\n            for(let input of inputs)\r\n            {\r\n                console.log(`Found MIDI input: ${input.name}, ID: ${input.id}`);\r\n                //input.onMIDIMessage = this.onMIDIMessage.bind(this);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Please connect MIDI device.\");\r\n        }\r\n\r\n        // list midi outputs to console\r\n        if(outputs != null)\r\n        {\r\n            for(let output of outputs)\r\n            {\r\n                console.log(`Found MIDI output: ${output.name}, ID: ${output.id}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    onMIDIFailure =  () =>\r\n    {\r\n        console.log(\"Midi failure.\");\r\n    }\r\n\r\n    onMIDIMessage = (event) =>\r\n    {\r\n        let message = `MIDI message received at timestamp ${event.timeStamp}[${event.data.length} bytes]: `;\r\n\r\n        for(const character of event.data)\r\n        {\r\n            message += `0x${character.toString(16)}`;\r\n        }\r\n\r\n        console.log(message);\r\n    }\r\n}\r\n\r\n\r\nexport default MIDIAccess;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,UAAU;AAE1B,MAAMC,UAAU,CAChB;EAKIC,WAAWA,CAAA,EACX;IAAA,KAyCAC,aAAa,GAAI,MACjB;MACIC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAChC,CAAC;IAAA,KAEDC,aAAa,GAAIC,KAAK,IACtB;MACI,IAAIC,OAAO,GAAI,sCAAqCD,KAAK,CAACE,SAAU,IAAGF,KAAK,CAACG,IAAI,CAACC,MAAO,WAAU;MAEnG,KAAI,MAAMC,SAAS,IAAIL,KAAK,CAACG,IAAI,EACjC;QACIF,OAAO,IAAK,KAAII,SAAS,CAACC,QAAQ,CAAC,EAAE,CAAE,EAAC;MAC5C;MAEAT,OAAO,CAACC,GAAG,CAACG,OAAO,CAAC;IACxB,CAAC;IAvDGM,SAAS,CAACC,iBAAiB,EAAE,CACxBC,IAAI,CAAC,IAAI,CAACC,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAACf,aAAa,CAACe,IAAI,CAAC,IAAI,CAAC,CAAC;IACvE,IAAI,CAACC,IAAI,GAAG,IAAI;EACpB;EAEAF,aAAaA,CAACG,UAAU,EACxB;IACIhB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/C,IAAI,CAACc,IAAI,GAAGC,UAAU;IAEtB,IAAIC,OAAO,GAAGD,UAAU,CAACE,MAAM;IAC/B,IAAIC,QAAQ,GAAGH,UAAU,CAACI,OAAO;IAEjC,MAAMF,MAAM,GAAGD,OAAO,CAACI,MAAM,EAAE;IAC/B,MAAMD,OAAO,GAAGD,QAAQ,CAACE,MAAM,EAAE;;IAEjC;IACA,IAAIH,MAAM,IAAI,IAAI,EAClB;MACI,KAAI,IAAII,KAAK,IAAIJ,MAAM,EACvB;QACIlB,OAAO,CAACC,GAAG,CAAE,qBAAoBqB,KAAK,CAACC,IAAK,SAAQD,KAAK,CAACE,EAAG,EAAC,CAAC;QAC/D;MACJ;IACJ,CAAC,MAED;MACIxB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C;;IAEA;IACA,IAAGmB,OAAO,IAAI,IAAI,EAClB;MACI,KAAI,IAAIK,MAAM,IAAIL,OAAO,EACzB;QACIpB,OAAO,CAACC,GAAG,CAAE,sBAAqBwB,MAAM,CAACF,IAAK,SAAQE,MAAM,CAACD,EAAG,EAAC,CAAC;MACtE;IACJ;EACJ;AAkBJ;AAGA,eAAe3B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}